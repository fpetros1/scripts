#!/usr/bin/env sh

CHECKUPDATES_CMD="checkupdates"
CHECK_AUR_UPDATES_CMD="aur-check-updates --color always"

if [ ! "$1" = "color" ]; then
    CHECKUPDATES_CMD="$CHECKUPDATES_CMD --nocolor"
    CHECK_AUR_UPDATES_CMD=$(echo "$CHECK_AUR_UPDATES_CMD" | sed 's/always/never/g')
fi

UPDATES=$($CHECKUPDATES_CMD)
#AUR_UPDATES=$($CHECK_AUR_UPDATES_CMD)
AUR_UPDATES="no updates"

COUNT_UPDATES=0
UPDATE_STRING=""

if [ -z "$UPDATES" ]; then
    echo "0|"
    exit
fi

UPDATE_NAMES=$(echo "$UPDATES" | awk '{print $1}' | xargs)

for update in $UPDATE_NAMES; do
    UPDATE_STRING=$([ -z "$UPDATE_STRING" ] && printf "$UPDATES" | grep -F "$update" || printf "$UPDATE_STRING\n$(printf "$UPDATES" | grep -F "$update")")
    COUNT_UPDATES=$(echo "$COUNT_UPDATES+1" | bc)
done

if [ -z "$(echo "$AUR_UPDATES" | grep "no updates")" ]; then
    AUR_UPDATES=$(echo "$AUR_UPDATES" | tail -n +2)
    AUR_TAG="[AUR]"
    for update in ${AUR_UPDATES[@]}; do
        UPDATE_STRING=$([ -z "$UPDATE_STRING" ] && echo "$AUR_TAG $update" || echo "$UPDATE_STRING\n$AUR_TAG $update")
        COUNT_UPDATES=$(echo "$COUNT_UPDATES+1" | bc)
    done
fi

echo "$COUNT_UPDATES|$UPDATE_STRING"
