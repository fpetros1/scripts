#!/usr/bin/env sh

UPDATES=$(get-updates-arch color)

[ $(which flatpak 2>/dev/null) ] &&\
    FP_UPDATES=$(flatpak remote-ls --updates | head -n 1 | awk -F "\t" '{print "\033[1m"$1" -> \x1b[32m"$3"\x1b[0m\033[0m"}')

COUNT_UPDATES=$(printf -- $UPDATES | cut -d '|' -f1)
UPDATE_STRING=$(echo "$UPDATES" | cut -d '|' -f2-)

[ -z $FP_UPDATES ] && FP_UPDATES_COUNT=0 || FP_UPDATES_COUNT=$(echo $FP_UPDATES | wc -l)

COUNT_UPDATES=$(echo "$COUNT_UPDATES+$FP_UPDATES_COUNT" | bc)

UPDATE_STRING="$UPDATE_STRING"
[ -n "$FP_UPDATES" ] && \
    [ -n "$UPDATE_STRING" ] &&\
    UPDATE_STRING="$UPDATE_STRING""\n\n\033[34;36mFlatpak:\033[34;0m \n"
[ -n $FP_UPDATES ] && UPDATE_STRING="$UPDATE_STRING""$FP_UPDATES"


if [ $COUNT_UPDATES -eq 0 ]; then
    echo "\n\033[34;31mNo updates available.\033[34;0m"
    pause
    exit 1
fi

echo "\033[34;36mPackages:\033[34 \n\n$(echo "$UPDATE_STRING")\n"
echo "\033[34;36mTotal updates: \033[34;32m$(echo "$COUNT_UPDATES")\033[34;0m"

echo ""
echo -n "Continue? [Y/n]: " && read RESPONSE

if [ -z "$RESPONSE" ] || [ $(echo "$RESPONSE" | awk '{print toupper($0)}') = "Y" ]; then 
    echo ""
    paru --noconfirm -Syu
    flatpak -y update

    if [ $(which write-updates-json-arch) ]; then
        write-updates-json-arch &
    fi

    pause
    exit 0
fi

echo "\n\033[34;31mUpdate canceled.\033[34;0m"
pause
exit 2
