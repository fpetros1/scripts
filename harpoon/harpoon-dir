#!/usr/bin/env sh

BASE_FOLDER=$([ -z "$XDG_DATA_HOME" ] && echo "$XDG_DATA_HOME/harpoon" \
    || echo "$HOME/.local/share/harpoon")

if ! [ -d "$BASE_FOLDER" ]; then
    mkdir -p "$BASE_FOLDER"
fi

HARPOON_FILE="$BASE_FOLDER/harpoon.dir.json"

reset() {
    jq --null-input '{"current": 0, "harpoons": []}' > "$HARPOON_FILE"
}

if ! [ -f "$HARPOON_FILE" ]; then
    reset
fi

HARPOON_CONTENT=$(cat "$HARPOON_FILE")

get_current_harpoon_index() {
    echo "$HARPOON_CONTENT" | jq -r '.current'
    exit 0
}

exists() {
    HARPOON=$(echo "$HARPOON_CONTENT" | jq -r --arg ELEM "$1" '.harpoons[] | select(. == $ELEM)')
    [ -z "$HARPOON" ] && echo "false" || echo "true"
}

get_current_harpoon() {
    LENGTH=$(echo "$HARPOON_CONTENT" | jq -r '.harpoons | length')

    if [ "$LENGTH" = "0" ]; then
        exit 1
    fi

    echo "$HARPOON_CONTENT" | jq -r '.harpoons[.current]'
    exit 0
}

add_harpoon() {
    if ! [ -d "$1" ]; then
       exit 1 
    fi

    if [ $(exists "$1") = "true" ]; then
       echo "Harpoon already added!"
       exit 0
    fi

    echo "$HARPOON_CONTENT" \
        | jq --argjson CURRENT $(get_length) --arg HARPOON "$1" '. | {"current": $CURRENT,"harpoons": (.harpoons + [$HARPOON])}' \
        > "$HARPOON_FILE"

    exit 0
}

remove_harpoon() {
    NEW_CURRENT=$(bc <<< "$(get_current_harpoon_index) - 1")

    if [ "$NEW_CURRENT" -lt 0 ]; then
       NEW_CURRENT=0 
    fi
    
    echo "$HARPOON_CONTENT" \
        | jq --argjson CURRENT $NEW_CURRENT --arg HARPOON "$1" '. | {"current": $CURRENT,"harpoons": [.harpoons[] | select(. != $HARPOON)]}' \
        > "$HARPOON_FILE"
}

get_length() {
    echo "$HARPOON_CONTENT" | jq -r '.harpoons | length'
}

next_harpoon() {
    LENGTH=$(get_length)

    if [ -z "$LENGTH" ] || [ "$LENGTH" -eq 0 ]; then
        exit 0
    fi
    
    NEXT=$(echo "$(echo "$HARPOON_CONTENT" | jq -r '.current') + 1" | bc)

    if [ "$NEXT" -gt $(echo "$LENGTH - 1" | bc) ]; then
        NEXT=0
    fi

    HARPOON_CONTENT=$(echo "$HARPOON_CONTENT" | jq --argjson NEXT $NEXT '. | {"current": $NEXT,"harpoons": .harpoons}')
    echo "$HARPOON_CONTENT" > "$HARPOON_FILE"

    get_current_harpoon
}

previous_harpoon() {
    LENGTH=$(get_length)
    
    if [ -z "$LENGTH" ] || [ "$LENGTH" == 0 ]; then
        exit 0
    fi
    
    NEXT=$(echo "$(echo "$HARPOON_CONTENT" | jq -r '.current') - 1" | bc)

    if [ "$NEXT" -lt 0 ]; then
        NEXT=$(echo "$LENGTH - 1" | bc)
    fi

    HARPOON_CONTENT=$(echo "$HARPOON_CONTENT" | jq --argjson NEXT $NEXT '. | {"current": $NEXT,"harpoons": .harpoons}')
    echo "$HARPOON_CONTENT" > "$HARPOON_FILE"

    get_current_harpoon
}

list_harpoons() {
    echo "$HARPOON_CONTENT" | jq -r '.harpoons[]'
    exit 0
}

case "$1" in
    current\_index) get_current_harpoon_index;;
    current) get_current_harpoon;;
    length) get_length;;
    add) add_harpoon "$2";;
    remove) remove_harpoon "$2";;
    next) next_harpoon;;
    previous) previous_harpoon;;
    clear) reset;;
    *) list_harpoons;; 
esac

